{"meta":{"title":"ZeromaXHe的博客","subtitle":"欢迎来到ZeromaXHe的博客！","description":"测试一下用GitHub做博客是什么感觉，哈哈哈","author":"ZeromaXHe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"Test","date":"2019-04-04T07:14:57.000Z","updated":"2019-04-04T07:17:29.752Z","comments":true,"path":"Test/index.html","permalink":"http://yoursite.com/Test/index.html","excerpt":"","text":"Try to test what the so-called Pages mean. (Still don’t know where they are…)"}],"posts":[{"title":"【Java】数组的创建方法","slug":"【Java】数组的创建方法","date":"2019-04-04T06:40:00.000Z","updated":"2019-04-04T07:08:50.286Z","comments":true,"path":"2019/04/04/【Java】数组的创建方法/","link":"","permalink":"http://yoursite.com/2019/04/04/【Java】数组的创建方法/","excerpt":"","text":"1.一维数组1.1 一维数组的创建一维数组的创建有下列两种形式： 1.1.1 先声明，再用new运算符进行内存分配声明一位数组有下列两种方式：12数组元素类型 数组名字[];数组元素类型[] 数组名字; 声明数组后，还不能立即访问它的任何元素，因为声明数组只是给出了数组名字和元素的数据类型，想要真正使用数组，还要为它分配内存空间。在为数组分配内存空间时必须指明数组的长度。为数组分配内存空间的语法格式如下：1数组名字 = new 数组元素的类型[数组元素的个数]; 例： 12int arr[];arr=new int[5]; 1.1.2 声明的同时为数组分配内存语法如下：1数组元素的类型 数组名 = new 数组元素的类型[数组元素的个数]; 例如：1int month[] = new int[12]; 1.2 一维数组的初始化两种形式：12int arr[] = new int[]&#123;1,2,3,5,25&#125;; //第一种初始化方式int arr2[] = &#123;34,23,12,6&#125;; //第二种初始化方式 2. 二维数组2.1 二维数组的创建声明：1int myarr[][]; 分配内存空间： (1)直接为每一维数组分配内存空间1a = new int[2][4]; (2)分别为每一维分配内存123a = new int[2][];a[0] = new int[2];a[1] = new int[3]; 2.2 二维数组的初始化例：1int myarr[][] = &#123;&#123;12,0&#125;,&#123;45,10&#125;&#125;;","categories":[{"name":"java","slug":"java","permalink":"http://yoursite.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}],"author":"ZeromaXHe"},{"title":"Hello World","slug":"hello-world","date":"2019-04-03T05:05:15.003Z","updated":"2019-04-03T05:05:15.003Z","comments":true,"path":"2019/04/03/hello-world/","link":"","permalink":"http://yoursite.com/2019/04/03/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}